# Generated by Django 5.0.3 on 2024-04-24 22:21

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aiseminar',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateField()),
                ('lecturer', models.CharField(max_length=256)),
                ('lecturerfrom', models.CharField(max_length=256)),
                ('url', models.CharField(max_length=256)),
                ('title', models.CharField(max_length=256)),
                ('abstract', models.TextField()),
                ('note', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'aiseminar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BibtexChars',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('char', models.CharField(max_length=5)),
                ('bibcode', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'bibtex_chars',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeBajka',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('getname', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('has_left', models.BooleanField(db_column='has-left')),
                ('primarytext', models.BooleanField()),
            ],
            options={
                'db_table': 'home_bajka',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeCnc',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=300)),
                ('getname', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('primarytext', models.BooleanField()),
            ],
            options={
                'db_table': 'home_cnc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeDeedee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('getname', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('has_left', models.BooleanField(db_column='has-left')),
                ('primarytext', models.BooleanField()),
            ],
            options={
                'db_table': 'home_deedee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeIgor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('getname', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('has_left', models.BooleanField(db_column='has-left')),
                ('primarytext', models.BooleanField()),
            ],
            options={
                'db_table': 'home_igor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeKik',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('getname', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('has_left', models.BooleanField(db_column='has-left')),
                ('primarytext', models.BooleanField()),
            ],
            options={
                'db_table': 'home_kik',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeLuba',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('getname', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('has_left', models.BooleanField(db_column='has-left')),
                ('primarytext', models.BooleanField()),
            ],
            options={
                'db_table': 'home_luba',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeLudo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('getname', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('has_left', models.BooleanField(db_column='has-left')),
                ('primarytext', models.BooleanField()),
            ],
            options={
                'db_table': 'home_ludo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeMartin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('getname', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('has_left', models.BooleanField(db_column='has-left')),
                ('primarytext', models.BooleanField()),
            ],
            options={
                'db_table': 'home_martin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeMatej',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('getname', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('has_left', models.BooleanField(db_column='has-left')),
                ('primarytext', models.BooleanField()),
            ],
            options={
                'db_table': 'home_matej',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeMeicogsci',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('getname', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=300)),
                ('text', models.TextField()),
                ('primarytext', models.BooleanField()),
            ],
            options={
                'db_table': 'home_meicogsci',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeMeicogsciGallery',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('albumname', models.CharField(max_length=200)),
                ('getname', models.CharField(max_length=200)),
                ('path', models.CharField(max_length=200)),
                ('coverphoto', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('vis', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'home_meicogsci_gallery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomePetog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('getname', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('has_left', models.BooleanField(db_column='has-left')),
                ('primarytext', models.BooleanField()),
            ],
            options={
                'db_table': 'home_petog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeTomas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('getname', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('has_left', models.BooleanField(db_column='has-left')),
                ('primarytext', models.BooleanField()),
            ],
            options={
                'db_table': 'home_tomas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tag', models.CharField(max_length=100)),
                ('projectname', models.TextField()),
                ('description', models.TextField()),
                ('vis', models.BooleanField()),
            ],
            options={
                'db_table': 'projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Projectxpublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'projectxpublication',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Publications',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('vis', models.BooleanField()),
                ('ptype', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=300)),
                ('address', models.TextField()),
                ('author', models.TextField()),
                ('booktitle', models.TextField()),
                ('edition', models.TextField()),
                ('editor', models.TextField()),
                ('institution', models.TextField()),
                ('journal', models.TextField()),
                ('month', models.CharField(max_length=50)),
                ('note', models.TextField()),
                ('number', models.CharField(max_length=30)),
                ('organization', models.TextField()),
                ('pages', models.CharField(max_length=50)),
                ('publisher', models.TextField()),
                ('school', models.TextField()),
                ('series', models.TextField()),
                ('title', models.TextField()),
                ('volume', models.TextField()),
                ('year', models.CharField(max_length=5)),
                ('url', models.TextField()),
            ],
            options={
                'db_table': 'publications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userxproject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'userxproject',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userxpublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'userxpublication',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('info', models.TextField()),
                ('tablename', models.CharField(max_length=100)),
                ('role', models.SmallIntegerField()),
                ('externalpublications', models.SmallIntegerField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('projects', models.ManyToManyField(blank=True, related_name='users', through='SerializerSorcery.Userxproject', to='SerializerSorcery.projects')),
                ('publications', models.ManyToManyField(blank=True, related_name='users', through='SerializerSorcery.Userxpublication', to='SerializerSorcery.publications')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
